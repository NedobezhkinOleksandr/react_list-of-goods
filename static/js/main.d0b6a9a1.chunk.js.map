{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","_useState","useState","sortType","NONE","isReversed","_useState2","_slicedToArray","reorderOptions","setReorderOptions","visibleGoods","goods","_ref","_toConsumableArray","ALPHABET","sort","LENGTH","a","b","length","reverse","getReorderedGoods","_jsxs","className","children","_jsx","type","concat","onClick","_objectSpread","map","good","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,iEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGW,SAARD,OAAQ,eAARA,IAAQ,uBAARA,IAAQ,oBAARA,MAAQ,KAoCN,IAAME,EAAgB,WAC3B,IAAAC,EAA4CC,mBAAyB,CACnEC,SAAUL,EAASM,KACnBC,YAAY,IACZC,EAAAC,YAAAN,EAAA,GAHKO,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GAiClCI,EA1DD,SACLC,EAAeC,GAEd,IADCT,EAAQS,EAART,SAAUE,EAAUO,EAAVP,WAENK,EAAYG,YAAOF,GAEzB,OAAQR,GACN,KAAKL,EAASgB,SACZJ,EAAaK,OACb,MACF,KAAKjB,EAASkB,OACZN,EAAaK,MAAK,SAACE,EAAGC,GAAC,OAAKD,EAAEE,OAASD,EAAEC,UAU7C,OAJId,GACFK,EAAaU,UAGRV,EAqCcW,CAAkBtB,EAAiBS,GAExD,OACEc,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UAAS,kBAAAI,OAAoBnB,EAAeL,WAAaL,EAASgB,SAAW,WAAa,IAC1Fc,QApCe,WACrBnB,EAAkB,CAChBN,SAAUL,EAASgB,SACnBT,YAAY,KAiCgBmB,SACzB,wBAIDC,cAAA,UACEC,KAAK,SACLH,UAAS,qBAAAI,OAAuBnB,EAAeL,WAAaL,EAASkB,OAAS,WAAa,IAC3FY,QArCa,WACnBnB,EAAkB,CAChBN,SAAUL,EAASkB,OACnBX,YAAY,KAkCcmB,SACvB,mBAIDC,cAAA,UACEC,KAAK,SACLH,UAAS,qBAAAI,OAAuBnB,EAAeH,YAAe,YAC9DuB,QAtCQ,WACdnB,EAAiBoB,wBAAC,GACbrB,GAAc,IACjBH,YAAaG,EAAeH,eAmCPmB,SAClB,aAIChB,EAAeL,WAAaL,EAASM,MACpCI,EAAeH,aAChBoB,cAAA,UACEC,KAAK,SACLH,UAAU,mBACVK,QAzCI,WACZnB,EAAkB,CAChBN,SAAUL,EAASM,KACnBC,YAAY,KAsCSmB,SAChB,aAMLC,cAAA,MAAAD,SACGd,EAAaoB,KAAI,SAACC,GAAI,OACrBN,cAAA,MAAe,UAAQ,OAAMD,SAC1BO,GADMA,YC/HnBC,IAASC,OACPR,cAACzB,EAAG,IACJkC,SAASC,eAAe,W","file":"static/js/main.d0b6a9a1.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [reorderOptions, setReorderOptions] = useState<ReorderOptions>({\n    sortType: SortType.NONE,\n    isReversed: false,\n  });\n\n  const sortByAlphabet = () => {\n    setReorderOptions({\n      sortType: SortType.ALPHABET,\n      isReversed: false,\n    });\n  };\n\n  const sortByLength = () => {\n    setReorderOptions({\n      sortType: SortType.LENGTH,\n      isReversed: false,\n    });\n  };\n\n  const reverse = () => {\n    setReorderOptions({\n      ...reorderOptions,\n      isReversed: !reorderOptions.isReversed,\n    });\n  };\n\n  const reset = () => {\n    setReorderOptions({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, reorderOptions);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${reorderOptions.sortType === SortType.ALPHABET ? 'is-light' : ''}`}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${reorderOptions.sortType === SortType.LENGTH ? 'is-light' : ''}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${reorderOptions.isReversed && ('is-light')}`}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(reorderOptions.sortType !== SortType.NONE\n        || reorderOptions.isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}